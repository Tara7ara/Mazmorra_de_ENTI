val bigMap = arrayOf(
    charArrayOf('#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#'),
    charArrayOf('#', '@', '.', '.', '.', '.', '.', 'O', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'K', '.', '.', '#'),
    charArrayOf('#', '#', '#', '#', '#', '.', '.', '.', 'T', '.', '.', '#', 'P', '#', 'G', '.', '.', 'P', '.', 'O', '.', 'O', '.', 'G', '.', '.', '.', 'T', '#'),
    charArrayOf('#', 'K', 'O', '.', '#', '#', '#', '#', '.', '.', '.', '#', 'P', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '#'),
    charArrayOf('#', 'O', 'O', '.', '.', '.', '.', '#', '#', '#', '#', '#', 'B', '#', '#', '#', '#', '#', '#', '#', '#', '#', '.', '.', '.', 'G', '.', 'O', '#'),
    charArrayOf('#', '#', '#', '#', '#', '.', '.', '.', 'G', '.', '.', '#', 'S', '#', '.', '.', '.', '.', '.', '.', '.', '#', '#', '#', '#', '.', '.', '.', '#'),
    charArrayOf('#', '.', 'G', '.', '.', 'O', '.', '.', 'G', '.', '.', '#', '#', '#', '.', 'G', '.', 'O', '.', '.', '.', '.', '.', '#', '#', '#', '#', 'D', '#'),
    charArrayOf('#', '.', 'T', '.', '.', '.', '.', '#', '#', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '#'),
    charArrayOf('#', '.', '.', '.', '#', '#', '#', '#', '.', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '.', '#'),
    charArrayOf('#', '#', '#', '#', '#', '.', '.', 'T', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '#', 'D', '#'),
    charArrayOf('#', '.', '.', '.', '#', 'G', '.', '.', '.', '.', '.', '.', 'T', '.', '.', '.', 'T', '.', '.', 'G', '.', '.', '.', '.', '#', '.', '#', '.', '#'),
    charArrayOf('#', '.', 'J', '.', '#', '.', '.', '.', 'G', '.', 'O', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '#', '#', '#', '.', '#', '.', '#'),
    charArrayOf('#', '.', '.', '#', '#', '.', '.', '.', '.', '.', '.', 'G', '.', '.', '.', '.', '.', '.', '.', '.', '#', '#', '#', '.', '.', '.', '.', '.', '#'),
    charArrayOf('#', '.', '.', '#', '.', '.', 'O', '.', 'T', '.', '.', '.', '.', 'O', '.', '.', '.', 'G', '.', '.', '#', '.', '.', '.', 'G', '.', '.', '.', '#'),
    charArrayOf('#', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '#', '#', '#', '.', 'G', '.', '.', '.', '.', 'O', '#'),
    charArrayOf('#', '.', '#', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', 'G', '.', '#'),
    charArrayOf('#', 'T', '#', '.', '.', '.', 'T', '.', 'G', '.', 'O', '.', '.', '.', 'T', '.', '.', '.', '#', '.', '.', 'O', '.', '.', 'T', '.', '.', '.', '#'),
    charArrayOf('#', 'O', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '#', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '#'),
    charArrayOf('#', 'G', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', 'G', '.', '.', '.', '.', '#'),
    charArrayOf('#', 'A', '#', '#', '#', '#', '#', '#', '#', '#', '.', '#', '#', '#', '#', '#', '#', '#', '.', '.', '.', '.', '.', '.', '.', 'O', '.', '.', '#'),
    charArrayOf('#', '.', '.', '.', '.', '.', '.', '#', '#', '#', '.', '#', '#', '#', 'G', '.', '.', '.', '.', '.', 'T', '.', '.', '.', '.', '.', '.', '.', '#'),
    charArrayOf('#', '.', '.', '.', '.', 'T', '.', '#', '#', '#', '.', '#', '#', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '#'),
    charArrayOf('#', '.', 'O', 'G', '.', '.', '.', '#', '#', '#', 'B', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '.', '.', '.', '.', '.', '.', '#'),
    charArrayOf('#', '.', '.', '.', '.', '.', 'O', '.', '#', '#', 'P', '#', '#', '#', '#', '.', '.', '.', '#', '#', '#', '#', '#', '#', '#', '.', '.', 'O', '#'),
    charArrayOf('#', '.', '.', '.', '.', '.', '.', '.', '#', '#', 'P', '#', '#', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '#', '#', '#', '#', 'D', '#'),
    charArrayOf('#', '.', '.', 'T', '.', '.', '.', '.', '#', '#', 'P', 'P', 'K', '#', '#', '.', 'T', '.', '.', '.', '.', '.', 'G', '.', '.', '.', '.', '.', '#'),
    charArrayOf('#', '.', '.', '.', '.', '.', '.', '.', '#', '#', '#', '#', '#', '#', '.', '.', '.', '.', '.', 'O', '.', '.', '.', '.', '.', '.', '.', '.', '#'),
    charArrayOf('#', '.', '.', '.', '.', 'O', '.', '.', '.', '#', '#', '#', '#', '.', '.', 'G', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'O', '.', '#'),
    charArrayOf('#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'T', '.', '.', '.', '.', '.', '#'),
    charArrayOf('#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#')
)

// printMap() es una funci√≥n que imprime el contenido del arreglo bigMap.
fun printMap(){
    for (fila in bigMap) {
        for (character in fila) {
            print(" $character ")
        }
        println(" ")
    }
}

fun checkbox(player: PlayerStats){
    if (bigMap[player.posX][player.posY] == 'P') {
        asciiPotion()
        val response = readLine()
        if (response != "no") {
            player.potion++
        }
    }else if (bigMap[player.posX][player.posY] == 'B') {
        asciiBomb()
        val response = readLine()
        if (response != "no") {
            player.bomb++
        }
    }else if (bigMap[player.posX][player.posY] == 'S') {
        asciiSword()
        val response = readLine()
        if (response != "no") {
            player.sword = true
        }
    }else if (bigMap[player.posX][player.posY] == 'A') {
        asciiWapon()
        val response = readLine()
        if (response != "no") {
            player.gun = true
        }
    }else if (bigMap[player.posX][player.posY] == 'K') {
        asciiKey()
        val response = readLine()
        if (response != "no") {
            player.key = true
        }
    }else if (bigMap[player.posX][player.posY] == 'T') {
        asciiTroll()
        Thread.sleep(1000)
        combat("troll", player)
    }else if (bigMap[player.posX][player.posY] == 'G'){
        asciiGoblin()
        Thread.sleep(1000)
        combat("goblin", player)
    }else if (bigMap[player.posX][player.posY] == 'O'){
        asciiOrc()
        Thread.sleep(1000)
        combat("orc", player)
    }else if (bigMap[player.posX][player.posY] == 'J'){
        asciiDevilBoss()
        Thread.sleep(3000)
        combat("devilBoss", player)
    }else {
        bigMap[player.posX][player.posY] = '@'
    }
    bigMap[player.posX][player.posY] = '@'
    printMap()
}
